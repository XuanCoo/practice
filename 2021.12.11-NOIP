//https://www.luogu.com.cn/problem/P7960?contestId=57025

#include <stdio.h>

//#define 



int judge_if_contain7(int n){
	/*
	return 1: it do contain 7
	return 0: it not contain 7
	*/
	
	int current = 0;
	// while %10
	while (1)
	{
		current = n%10;
//		printf("current = %d\n",n%10);
		n = n/10;
//		printf("%d\n",current);
		if (current == 7)
		{
			return 1;
		}
		if(n == 0)
		{
			break;
		}
	}
	return 0;
}

//int judge_if_divide_any7(int n)
//{
//	/*
//	return 1: it can be dividey by any 7
//	return 0: it not contain 7
//	*/
//	if (judge_if_contain7(n)) 
//	{
//		return 1;
//	}
////	int dynamicBoundry = n;
//	for (int i = 6; i<=n; i++)
//	{
//		if (judge_if_contain7(i))
//		{
////			printf("%d\n",i);
////			dynamicBoundry = n;
////			dynamicBoundry = n/i+1;
//			if(n%i==0)
//			{
//				return 1;	
//			}
//		}
//	}
//	return 0;
//	
//	
//}


//int get_the_near_no7(int n)
//{
//	
//}

int new_judge_if_divide_by_any7(int n)
{

	for (int i = 2; i<= dynamic_boundry;i++)
	{
		if (n%i==0)
		{
			dynamic_boundry = n / i;
			// judge if i and n/i contain 7, if one is yes, it is not right
			if (judge_if_contain7(i) || judge_if_contain7(n/i))
			{
				return 1;
			}
		}
	}
	
	return 0;
	
 } 



int main(){
	/*
	input 1 : the number of total input
	input 2-n: the first number, we need to get the number after it.
	*/
	int count,currentNum;
	scanf("%d",&count);	
	for (int i = 1; i<= count; i++)
	{
		scanf("%d",&currentNum);	
		if (new_judge_if_divide_by_any7(currentNum) == 0)
		{
			while (1)
			{
				currentNum = currentNum + 1;
				if (new_judge_if_divide_by_any7(currentNum) == 1)
				{
					continue;
				}
				else
				{
					printf("%d\n",currentNum);
					break;
				}
			}
		}
		else
		{
			printf("%d\n",-1);
		}
	}	

	
//	for (int i = 1; i<= count; i++)
//	{
//		scanf("%d",currentNum);
//		/*
//		I think the dynamic is more good to reduce count!
//		but I need to do a simple work first
//		*/
//		int count = 1;
//		int flag; // 0: it is not right, 1 it can be continue
//		while(count < currentNum)
//		{
//			if (judge_if_contain7(count))
//			{
//				if(currentNum % count == 0)
//				{
//					flag = 0; 
//					break;
//				}
//			}
//			count = count + 1;
//		}
//
//		
//	}
//	
	return 0;
} 
